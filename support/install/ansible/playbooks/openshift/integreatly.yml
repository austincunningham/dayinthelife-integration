---
- hosts: master
  gather_facts: no
  tasks:
    - set_fact:
        rhsso_namespace: "sso"
    - name: Retrieve cluster route subdomain
      slurp:
        src: "{{ eval_openshift_master_config_path }}"
      register: openshift_master_config
      become: yes

    - name: Retrieve RH-SSO admin user password
      shell: oc get dc/sso -o jsonpath='{.spec.template.spec.containers[?(@.name=="sso")].env[?(@.name=="SSO_ADMIN_PASSWORD")].value}' -n {{ rhsso_namespace }}
      register: rhsso_admin_password_cmd


    - name: Retrieve RH-SSO admin user name
      shell: oc get dc/sso -o jsonpath='{.spec.template.spec.containers[?(@.name=="sso")].env[?(@.name=="SSO_ADMIN_USERNAME")].value}' -n {{ rhsso_namespace }}
      register: rhsso_admin_user_cmd

    - name: Retrieve 3Scale admin auth token
      shell: oc describe dc/system-app -n 3scale | grep ADMIN_ACCESS_TOKEN | tail -1 | awk '{print $2}'
      register: admin_auth_config

    - set_fact:
        threescale_admin_token: "{{ admin_auth_config.stdout }}"

    - name: Retrieve 3Scale master auth token
      shell: oc describe dc/system-app -n 3scale | grep MASTER_ACCESS_TOKEN | tail -1 | awk '{print $9}' | sed 's/MASTER_ACCESS_TOKEN=//' | sed 's/"//g'
      register: master_auth_config

    - set_fact:
        threescale_admin_token: "{{ admin_auth_config.stdout }}"        
    - set_fact:
        threescale_master_token: "{{master_auth_config.stdout}}"

    - set_fact:
        rhsso_admin_username: "{{rhsso_admin_user_cmd.stdout}}"

    - set_fact:
        oc_apps_domain: "{{ (openshift_master_config['content'] | b64decode | from_yaml)['routingConfig']['subdomain'] }}"

    - set_fact:
        rhsso_admin_password: "{{rhsso_admin_password_cmd.stdout}}"

    - add_host:
        name: SHARED_VARS
        rhsso_admin_username: "{{ rhsso_admin_username }}"
        rhsso_admin_password: "{{ rhsso_admin_password }}"
        oc_apps_domain: "{{ oc_apps_domain }}"
        threescale_master_token: "{{threescale_master_token}}"
        threescale_admin_token: "{{threescale_admin_token}}"

- name: "Install API Workshop"
  hosts: workshop
  vars_files: roles/workshop/defaults/main.yml
  tasks:
    # - include_role:
    #     name: provision_microcks
    #   vars:
    #     eval_rhsso_admin_username: "{{ hostvars['SHARED_VARS']['rhsso_admin_username'] }}"
    #     eval_rhsso_admin_password: "{{ hostvars['SHARED_VARS']['rhsso_admin_password'] }}"
    #     ocp_apps_domain: "{{ hostvars['SHARED_VARS']['oc_apps_domain'] }}"
    
    # - include_role:
    #     name: provision_che
    #   vars:
    #     item: che
    #     ocp_apps_domain: "{{ hostvars['SHARED_VARS']['oc_apps_domain'] }}"
    # - include_role:
    #     name: provision_gogs
    #   vars:   
    #     ocp_apps_domain: "{{ hostvars['SHARED_VARS']['oc_apps_domain'] }}"
    #     configure_only: "false"
    - include_role:
        name: provision_threescale
      vars:  
        configure_only: "true"
        eval_rhsso_admin_username: "{{ hostvars['SHARED_VARS']['rhsso_admin_username'] }}"
        eval_rhsso_admin_password: "{{ hostvars['SHARED_VARS']['rhsso_admin_password'] }}"
        ocp_apps_domain: "{{ hostvars['SHARED_VARS']['oc_apps_domain'] }}"
        threescale_master_access_token: "{{ hostvars['SHARED_VARS']['threescale_master_token'] }}"
        threescale_admin_access_token: "{{ hostvars['SHARED_VARS']['threescale_admin_token'] }}"
            

